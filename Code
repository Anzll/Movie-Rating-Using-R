
title_selector <- ".lister-item-header a"
n_title <- 30

## Extracting the movie titles combining the `html_nodes()` and `html_text()` function
titles <- wp_content %>% 
  html_nodes(title_selector) %>% 
  html_text()

## Printing titles vector
titles
# Extracting the movie's years
## Using a process similar to the one we used to extract the titles
year_selector <- ".lister-item-year"
n_year <- 30
years <- wp_content %>% 
  html_nodes(year_selector) %>% 
  html_text()
## Converting the years from character to numeric data type
years <- readr::parse_number(years)
## Printing years vector
years

## Run time selector
runtime_selector <- ".runtime"
n_runtime <- 30
runtime <- wp_content %>%
  html_nodes(runtime_selector) %>%
  html_text()

runtime <- readr::parse_number(runtime)

runtime

## Genre selector

genre_selector <- ".genre"
n_genre <- 30
genre <- wp_content %>%
  html_nodes(genre_selector) %>%
  html_text()
genre <- stringr::str_trim(genre)

genre


## Rating Selector

user_rating_selector <- ".ratings-imdb-rating"
n_rating <- 30
rating <- wp_content %>%
  html_nodes(user_rating_selector) %>%
  html_attr("data-value")

rating <- as.numeric(rating)

metascore_selector <- ".metascore"
n_usermetascore <- 25
usermetascore <- wp_content %>%
  html_nodes(metascore_selector) %>%
  html_text()

usermetascore <- stringr::str_trim(usermetascore)
usermetascore <- as.numeric(usermetascore)

usermetascore

votes_selector <- ".sort-num_votes-visible :nth-child(2)"
n_votes <- 30
votes <- wp_content %>%
  html_nodes(votes_selector) %>%
  html_text()

votes <- readr::parse_number(votes)
votes

## Missing Values

append_vector <- function(vector, inserted_indices, values){
  ## Creating the current indices of the vector
  vector_current_indices <- 1:length(vector)
  ## Adding `0.5` to the `inserted_indices`
  new_inserted_indices <- inserted_indices + seq(0, 0.9, length.out = length(inserted_indices))
  ## Appending the `new_inserted_indices` to the current vector indices
  indices <- c(vector_current_indices, new_inserted_indices)
  ## Ordering the indices
  ordered_indices <- order(indices)
  ## Appending the new value to the existing vector
  new_vector <- c(vector, values)
  ## Ordering the new vector wrt the ordered indices
  new_vector[ordered_indices]
}

# Using the `append_vector()` function to insert `NA` into the metascores vector after the positions 1, 1, 1, 13, and 24 and saving the result back in metascores vector
usermetascore <- append_vector(usermetascore, c(1, 1, 1, 13, 24), NA)
usermetascore
# Removing the 17th element from the vectors: titles, years, runtimes, genres, and metascores
## Saving the result back to these vectors.
titles <- titles[-17]
years <- years[-17]
runtime <- runtime[-17]
genre <- genre[-17]
usermetascore <- usermetascore[-17]

runtime <- c(runtime, NA)  # Add NA to make the lengths match
votes <- votes[1:27]  # Adjust the length to match the other columns

length(runtime)



# Putting all together and Visualize
```{r}
# Creating a dataframe with the data we previously extracted: titles, years, runtimes, genres, user ratings, metascores, and votes.
## Keeping only the integer part of the user ratings using the `floor()` function. For example, `3.4` becomes `3`.
movie_df <- tibble::tibble("title" = titles, 
                           "year" = years, 
                           "runtime" = runtime, 
                           "genre" = genre, 
                           "rating" = floor(rating), 
                           "metascore" = usermetascore,
                           "vote" = votes)
# Creating a boxplot that show the number of vote again the user rating
ggplot(data = movie_df,
       aes(x = rating, y = vote, group = rating)) +
  geom_boxplot()


  



